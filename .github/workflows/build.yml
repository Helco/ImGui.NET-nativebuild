name: CI

# Controls when the workflow will run
on:
  create:

  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, zzio ]

  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get Submodules
        run: git submodule update --init --recursive

      - name: Build
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                ./ci-build.cmd
              else
                ./ci-build.sh
              fi
        shell: bash

      - name: Upload win-x64 Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: win-x64
          path: build\x64\Release\*.dll

      - name: Upload win-x86 Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: win-x86
          path: build\x86\Release\*.dll

      - name: Upload win-arm Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: win-arm
          path: build\ARM\Release\*.dll

      - name: Upload win-arm64 Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: win-arm64
          path: build\ARM64\Release\*.dll

      - name: Upload Linux Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux-x64
          path: build/Release/*.so

      - name: Upload MacOS Release
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: osx-x64
          path: build/Release/*.dylib

      - name: Upload Definitions Json File
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: JsonFiles
          path: |
            cimgui\generator\output\definitions.json
            cimguizmo\generator\output\definitions.json

      - name: Upload structs_and_enums Json File
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: JsonFiles
          path: |
            cimgui\generator\output\structs_and_enums.json
            cimguizmo\generator\output\structs_and_enums.json

  CreateReleaseOnTagCreate:
    runs-on: ubuntu-latest
    needs: [Build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Rename win-x64 and win-x86 artifacts
        run: |
          mv win-x64/cimgui.dll win-x64/cimgui.win-x64.dll
          mv win-x64/cimguizmo.dll win-x64/cimguizmo.win-x64.dll
          mv win-x86/cimgui.dll win-x86/cimgui.win-x86.dll
          mv win-x86/cimguizmo.dll win-x86/cimguizmo.win-x86.dll

      - name: Rename and move JSON artifacts
        run: |
          mv JsonFiles/cimgui/generator/output/definitions.json JsonFiles/cimgui-definitions.json
          mv JsonFiles/cimguizmo/generator/output/definitions.json JsonFiles/cimguizmo-definitions.json
          mv JsonFiles/cimgui/generator/output/structs_and_enums.json JsonFiles/cimgui-structs_and_enums.json
          mv JsonFiles/cimguizmo/generator/output/structs_and_enums.json JsonFiles/cimguizmo-structs_and_enums.json

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            win-x64/*
            win-x86/*
            JsonFiles/*
            linux-x64/*
            osx-x64/*
